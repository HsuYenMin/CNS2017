import copy
p = 28661294800114069007768236017771012251607018576093986823286814149509513675452275635042638987354048629725185006983949952108837417118101024196427874059746112373146674688108102191658628381225899560628677933856157056627887468689106995559937935463599189450455206845179774222254667824788120465189001600194073757297794949787319524466635098273575710447185401574795742616708210395524755264624260682423348748123914632427585203446721466593339015399125761744284777424125509546314701569108898934480431326685681803242146702497611445457941195705272186806178159360836165609438994389786824034040397877095231384671425898312053134662669

g = 16078909570239876795055844516958246040709670677352681543313753053742973386508316274779434207505711677850871497649465535051866957457021948204451138330623660110191150301811323442658421231468580615274747861693791813916691182214785963319378314164808593693096050898468910883788576053845247354173273067934871765729622501051769175928793373665854926345829773055861683607699372255679226577615328998611278891869859367786539895393361508257631990706373751978989473197793935179727162255300656316829056421905796513359716410495375718068635872275352455310154328769091838733283528171239199077479704783804081954231420368626696801127642

cipher = 21415417452862385822209271012817793150895390435770476978046862065625337202884791511920664986408841095900654738070236727797129762672224612357265828740478833337740444073740756067502998861070838401401680603766287937704416650587657439702450162322209198221779685030352473193878589584731120025567610438855058432121554123472417518418523366569057525298543223124010040598652144578966584834782274187095435034339994426555536056645750433383503505768388846624008773128977330539145239402105552071835989196181032937384073405971339677972093187563528876255816400751585513195407386698978227320390696973150369705374547095189643212682512

possibleKey = copy.copy(g)
for i in range(691829):
    possibleKey = (possibleKey * g) % p
    computeResult = (possibleKey * cipher) % p 
    possibleAns = hex(computeResult)
    if not len(possibleAns) % 2:
        arr = [int(possibleAns[i:i+2],16) for i in range(2,len(possibleAns),2)]
        cc, np, u, l = 0, 0, 0, 0
        for i in arr:
            if i < 32:
                cc += 1
            elif i < 64:
                np += 1
            elif i < 96:
                u  += 1
            else:
                l  += 1
        if cc < 2 and u + l > 9: 
            carr = [chr(i) for i in arr]
            print(''.join(carr))
